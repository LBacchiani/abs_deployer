module Delta5dacaf5886f24e57afb7f4a29873ddee;
import * from ABS.DC;
import * from FredhopperCloudServices;

delta SmartDeployDelta;
uses ABS.SmartDeploy;
adds import * from FredhopperCloudServices;
adds import * from ABS.DC;
modifies interface SmartDeployInterface {
	adds List<EndPoint> getEndPoint();
	adds List<IQueryService> getIQueryService();
	adds List<Service> getService();
	adds List<ServiceProvider> getServiceProvider();
	adds List<LoadBalancerService> getLoadBalancerService();
	adds List<DeploymentService> getDeploymentService();
	adds List<PlatformService> getPlatformService();
	adds List<MonitorPlatformService> getMonitorPlatformService();
	adds List<InfrastructureService> getInfrastructureService();
	adds List<DeploymentComponent> getDeploymentComponent();
	adds Unit deploy();
	adds Unit undeploy();
}
adds class MainSmartDeployer(CloudProvider cloudProvider, DeploymentComponent amazon_eu) implements SmartDeployInterface {

	List<EndPoint> ls_EndPoint = Nil;
	List<IQueryService> ls_IQueryService = Nil;
	List<Service> ls_Service = Nil;
	List<ServiceProvider> ls_ServiceProvider = Nil;
	List<LoadBalancerService> ls_LoadBalancerService = Nil;
	List<DeploymentService> ls_DeploymentService = Nil;
	List<PlatformService> ls_PlatformService = Nil;
	List<MonitorPlatformService> ls_MonitorPlatformService = Nil;
	List<InfrastructureService> ls_InfrastructureService = Nil;
	List<DeploymentComponent> ls_DeploymentComponent = Nil;

	List<EndPoint> getEndPoint() { return ls_EndPoint; }
	List<IQueryService> getIQueryService() { return ls_IQueryService; }
	List<Service> getService() { return ls_Service; }
	List<ServiceProvider> getServiceProvider() { return ls_ServiceProvider; }
	List<LoadBalancerService> getLoadBalancerService() { return ls_LoadBalancerService; }
	List<DeploymentService> getDeploymentService() { return ls_DeploymentService; }
	List<PlatformService> getPlatformService() { return ls_PlatformService; }
	List<MonitorPlatformService> getMonitorPlatformService() { return ls_MonitorPlatformService; }
	List<InfrastructureService> getInfrastructureService() { return ls_InfrastructureService; }
	List<DeploymentComponent> getDeploymentComponent() { return ls_DeploymentComponent; }

	Unit deploy() {
		DeploymentComponent c3_xlarge_1 = cloudProvider.prelaunchInstanceNamed("c3.xlarge");
		ls_DeploymentComponent = Cons(c3_xlarge_1,ls_DeploymentComponent);
		DeploymentComponent c3_xlarge_0 = cloudProvider.prelaunchInstanceNamed("c3.xlarge");
		ls_DeploymentComponent = Cons(c3_xlarge_0,ls_DeploymentComponent);
		DeploymentComponent c3_xlarge_3 = cloudProvider.prelaunchInstanceNamed("c3.xlarge");
		ls_DeploymentComponent = Cons(c3_xlarge_3,ls_DeploymentComponent);
		DeploymentComponent c3_xlarge_2 = cloudProvider.prelaunchInstanceNamed("c3.xlarge");
		ls_DeploymentComponent = Cons(c3_xlarge_2,ls_DeploymentComponent);
		[DC: c3_xlarge_1] LoadBalancerService oDef___LoadBalancerServiceImpl_0_c3_xlarge_1 = new LoadBalancerServiceImpl();
		ls_LoadBalancerService = Cons(oDef___LoadBalancerServiceImpl_0_c3_xlarge_1, ls_LoadBalancerService);
		[DC: amazon_eu] InfrastructureService oamazon_scenario___InfrastructureServiceImpl_0____aac88a02d4bf46edbea66ef7b1155b9e_0 = new InfrastructureServiceImpl();
		ls_InfrastructureService = Cons(oamazon_scenario___InfrastructureServiceImpl_0____aac88a02d4bf46edbea66ef7b1155b9e_0, ls_InfrastructureService);
		[DC: c3_xlarge_0] MonitorPlatformService oDef___PlatformServiceImpl_0_c3_xlarge_0 = new PlatformServiceImpl(oDef___LoadBalancerServiceImpl_0_c3_xlarge_1);
		ls_MonitorPlatformService = Cons(oDef___PlatformServiceImpl_0_c3_xlarge_0, ls_MonitorPlatformService);
		ls_PlatformService = Cons(oDef___PlatformServiceImpl_0_c3_xlarge_0, ls_PlatformService);
		[DC: c3_xlarge_3] DeploymentService oDef___DeploymentServiceImpl_0_c3_xlarge_3 = new DeploymentServiceImpl(oamazon_scenario___InfrastructureServiceImpl_0____aac88a02d4bf46edbea66ef7b1155b9e_0, oDef___PlatformServiceImpl_0_c3_xlarge_0);
		ls_DeploymentService = Cons(oDef___DeploymentServiceImpl_0_c3_xlarge_3, ls_DeploymentService);
		[DC: c3_xlarge_0] ServiceProvider oDef___ServiceProviderImpl_0_c3_xlarge_0 = new ServiceProviderImpl(oDef___PlatformServiceImpl_0_c3_xlarge_0, oDef___LoadBalancerServiceImpl_0_c3_xlarge_1);
		ls_ServiceProvider = Cons(oDef___ServiceProviderImpl_0_c3_xlarge_0, ls_ServiceProvider);
		[DC: c3_xlarge_2] DeploymentService oDef___DeploymentServiceImpl_0_c3_xlarge_2 = new DeploymentServiceImpl(oamazon_scenario___InfrastructureServiceImpl_0____aac88a02d4bf46edbea66ef7b1155b9e_0, oDef___PlatformServiceImpl_0_c3_xlarge_0);
		ls_DeploymentService = Cons(oDef___DeploymentServiceImpl_0_c3_xlarge_2, ls_DeploymentService);
		[DC: c3_xlarge_3] IQueryService oDef___QueryServiceImpl_0_c3_xlarge_3 = new QueryServiceImpl(oDef___DeploymentServiceImpl_0_c3_xlarge_3, "Customer X");
		ls_IQueryService = Cons(oDef___QueryServiceImpl_0_c3_xlarge_3, ls_IQueryService);
		ls_Service = Cons(oDef___QueryServiceImpl_0_c3_xlarge_3, ls_Service);
		ls_EndPoint = Cons(oDef___QueryServiceImpl_0_c3_xlarge_3, ls_EndPoint);
		[DC: c3_xlarge_2] IQueryService oDef___QueryServiceImpl_0_c3_xlarge_2 = new QueryServiceImpl(oDef___DeploymentServiceImpl_0_c3_xlarge_2, "Customer X");
		ls_IQueryService = Cons(oDef___QueryServiceImpl_0_c3_xlarge_2, ls_IQueryService);
		ls_Service = Cons(oDef___QueryServiceImpl_0_c3_xlarge_2, ls_Service);
		ls_EndPoint = Cons(oDef___QueryServiceImpl_0_c3_xlarge_2, ls_EndPoint);
	}

	Unit undeploy() {
		ls_EndPoint = Nil;
		ls_IQueryService = Nil;
		ls_Service = Nil;
		ls_ServiceProvider = Nil;
		ls_LoadBalancerService = Nil;
		ls_DeploymentService = Nil;
		ls_PlatformService = Nil;
		ls_MonitorPlatformService = Nil;
		ls_InfrastructureService = Nil;
		while ( !isEmpty(ls_DeploymentComponent) ) {
			cloudProvider.killInstance(head(ls_DeploymentComponent));
			ls_DeploymentComponent = tail(ls_DeploymentComponent);
		}
	}
}
adds class AddQueryDeployer(CloudProvider cloudProvider, DeploymentComponent amazon_us, InfrastructureService infrastructureObj, PlatformService platformObj, LoadBalancerService loadBalancerObj, ServiceProvider serviceProviderObj) implements SmartDeployInterface {

	List<EndPoint> ls_EndPoint = Nil;
	List<IQueryService> ls_IQueryService = Nil;
	List<Service> ls_Service = Nil;
	List<ServiceProvider> ls_ServiceProvider = Nil;
	List<LoadBalancerService> ls_LoadBalancerService = Nil;
	List<DeploymentService> ls_DeploymentService = Nil;
	List<PlatformService> ls_PlatformService = Nil;
	List<MonitorPlatformService> ls_MonitorPlatformService = Nil;
	List<InfrastructureService> ls_InfrastructureService = Nil;
	List<DeploymentComponent> ls_DeploymentComponent = Nil;

	List<EndPoint> getEndPoint() { return ls_EndPoint; }
	List<IQueryService> getIQueryService() { return ls_IQueryService; }
	List<Service> getService() { return ls_Service; }
	List<ServiceProvider> getServiceProvider() { return ls_ServiceProvider; }
	List<LoadBalancerService> getLoadBalancerService() { return ls_LoadBalancerService; }
	List<DeploymentService> getDeploymentService() { return ls_DeploymentService; }
	List<PlatformService> getPlatformService() { return ls_PlatformService; }
	List<MonitorPlatformService> getMonitorPlatformService() { return ls_MonitorPlatformService; }
	List<InfrastructureService> getInfrastructureService() { return ls_InfrastructureService; }
	List<DeploymentComponent> getDeploymentComponent() { return ls_DeploymentComponent; }

	Unit deploy() {
		DeploymentComponent c3_xlarge_1 = cloudProvider.prelaunchInstanceNamed("c3.xlarge");
		ls_DeploymentComponent = Cons(c3_xlarge_1,ls_DeploymentComponent);
		DeploymentComponent c3_xlarge_0 = cloudProvider.prelaunchInstanceNamed("c3.xlarge");
		ls_DeploymentComponent = Cons(c3_xlarge_0,ls_DeploymentComponent);
		DeploymentComponent c3_xlarge_2 = cloudProvider.prelaunchInstanceNamed("c3.xlarge");
		ls_DeploymentComponent = Cons(c3_xlarge_2,ls_DeploymentComponent);
		[DC: amazon_us] InfrastructureService oamazon_scenario___InfrastructureServiceImpl_0____5f38c23d3e0e42328440c7c9aef1e69b_0 = new InfrastructureServiceImpl();
		ls_InfrastructureService = Cons(oamazon_scenario___InfrastructureServiceImpl_0____5f38c23d3e0e42328440c7c9aef1e69b_0, ls_InfrastructureService);
		[DC: c3_xlarge_1] DeploymentService oDef___DeploymentServiceImpl_0_c3_xlarge_1 = new DeploymentServiceImpl(oamazon_scenario___InfrastructureServiceImpl_0____5f38c23d3e0e42328440c7c9aef1e69b_0, platformObj);
		ls_DeploymentService = Cons(oDef___DeploymentServiceImpl_0_c3_xlarge_1, ls_DeploymentService);
		[DC: c3_xlarge_2] DeploymentService oDef___DeploymentServiceImpl_0_c3_xlarge_2 = new DeploymentServiceImpl(oamazon_scenario___InfrastructureServiceImpl_0____5f38c23d3e0e42328440c7c9aef1e69b_0, platformObj);
		ls_DeploymentService = Cons(oDef___DeploymentServiceImpl_0_c3_xlarge_2, ls_DeploymentService);
		[DC: c3_xlarge_0] DeploymentService oDef___DeploymentServiceImpl_0_c3_xlarge_0 = new DeploymentServiceImpl(oamazon_scenario___InfrastructureServiceImpl_0____5f38c23d3e0e42328440c7c9aef1e69b_0, platformObj);
		ls_DeploymentService = Cons(oDef___DeploymentServiceImpl_0_c3_xlarge_0, ls_DeploymentService);
		[DC: c3_xlarge_1] IQueryService oDef___QueryServiceImpl_0_c3_xlarge_1 = new QueryServiceImpl(oDef___DeploymentServiceImpl_0_c3_xlarge_1, "Customer X");
		ls_IQueryService = Cons(oDef___QueryServiceImpl_0_c3_xlarge_1, ls_IQueryService);
		ls_Service = Cons(oDef___QueryServiceImpl_0_c3_xlarge_1, ls_Service);
		ls_EndPoint = Cons(oDef___QueryServiceImpl_0_c3_xlarge_1, ls_EndPoint);
		[DC: c3_xlarge_0] IQueryService oDef___QueryServiceImpl_0_c3_xlarge_0 = new QueryServiceImpl(oDef___DeploymentServiceImpl_0_c3_xlarge_0, "Customer X");
		ls_IQueryService = Cons(oDef___QueryServiceImpl_0_c3_xlarge_0, ls_IQueryService);
		ls_Service = Cons(oDef___QueryServiceImpl_0_c3_xlarge_0, ls_Service);
		ls_EndPoint = Cons(oDef___QueryServiceImpl_0_c3_xlarge_0, ls_EndPoint);
		[DC: c3_xlarge_2] IQueryService oDef___QueryServiceImpl_0_c3_xlarge_2 = new QueryServiceImpl(oDef___DeploymentServiceImpl_0_c3_xlarge_2, "Customer X");
		ls_IQueryService = Cons(oDef___QueryServiceImpl_0_c3_xlarge_2, ls_IQueryService);
		ls_Service = Cons(oDef___QueryServiceImpl_0_c3_xlarge_2, ls_Service);
		ls_EndPoint = Cons(oDef___QueryServiceImpl_0_c3_xlarge_2, ls_EndPoint);
	}

	Unit undeploy() {
		ls_EndPoint = Nil;
		ls_IQueryService = Nil;
		ls_Service = Nil;
		ls_ServiceProvider = Nil;
		ls_LoadBalancerService = Nil;
		ls_DeploymentService = Nil;
		ls_PlatformService = Nil;
		ls_MonitorPlatformService = Nil;
		ls_InfrastructureService = Nil;
		while ( !isEmpty(ls_DeploymentComponent) ) {
			cloudProvider.killInstance(head(ls_DeploymentComponent));
			ls_DeploymentComponent = tail(ls_DeploymentComponent);
		}
	}
}

productline SmartDeployProductLine;
features SmartDeployFeature;
delta SmartDeployDelta when SmartDeployFeature;
product SmartDeploy (SmartDeployFeature);
